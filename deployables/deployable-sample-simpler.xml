<!-- a deployable represents a set of instances to launch and configure at the
     same time -->
<deployable name="application_stack">
  <description>Deployable For JBoss Application Stack</description>
  <assemblies>
    <!-- when a deployable is launched, each assembly defition in this file
         will map to a launched instance -->
    <assembly name="Proxy Server" hwp="large">
      <!-- this image element references an image that exists in the image
           warehouse
           images get into the image warehouse either by building the
           image from a template XML file, or by importing from an
           external source (such as an Amazon AMI) -->
      <image id="15e2dfda-a406-4488-acb0-b5922d07994c"/>
      <services>
        <service name="proxy">
          <!-- - this is a URL that the Audrey Configuration Server must be
               able to access, and points to a script that is meant to
               setup the proxy
               - the user will be responsible for authoring and providing
               this script -->
          <executable url="https://www.aeolusproject.org/redmine/attachments/download/169/start_simple"/>
          <!-- - these are files that can be used by the
               "proxy_setup_script" during its execution to setup the
               proxy
               - again, these must be accessible by the Audrey
               Configuration Server -->
          <files>
            <file url="https://www.aeolusproject.org/redmine/attachments/download/169/start_simple"/>
            <file url="https://www.aeolusproject.org/redmine/attachments/download/169/start_simple"/>
          </files>
          <!-- - the parameters that are fed into the "proxy_setup_script"
               above are identified here in the "services" section
               - this is a bit clunky and will likely change -->
          <parameters>
            <!-- only scalar parameter types are going to be supported
                 initially -->
            <parameter name="ssl_key" type="scalar">
                <value>Test</value>
            </parameter>
            <parameter name="ssl_cert" type="scalar">
                <value>Test</value>
            </parameter>
          </parameters>
        </service>
      </services>
      <!-- the items listed under the "returns" element are values that
           are collected by the launched guest and returned to the
           configuration server
           the values that are returned to the configuration server can be
           shared with other launched instances in this deployable -->
      <returns>
        <return name="hostname"/>
      </returns>
    </assembly>
  </assemblies>
</deployable>
